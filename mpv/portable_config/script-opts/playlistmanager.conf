###不支持参数后注释，须另起一行

#### ------- FUNCTIONAL ------- ####

## navigation keybindings force override only while playlist is visible
## if "no" then you can display the playlist by any of the navigation keys
dynamic_binds=yes

## 动态绑定键位 不应在 input.conf 中设置（不与静态绑定的键位冲突）
## 可以绑定多个键位，用空格分离
key_moveup=UP
key_movedown=DOWN
key_movepageup=PGUP
key_movepagedown=PGDWN
key_movebegin=HOME
key_moveend=END
key_selectfile=RIGHT LEFT
key_unselectfile=
key_playfile=ENTER
key_removefile=BS
key_closeplaylist=ESC

## json format for replacing, check .lua for explanation
## example json=[{"ext":{"all":true},"rules":[{"_":" "}]},{"ext":{"mp4":true,"mkv":true},"rules":[{"^(.+)%..+$":"%1"},{"%s*[%[%(].-[%]%)]%s*":""},{"(%w)%.(%w)":"%1 %2"}]},{"protocol":{"http":true,"https":true},"rules":[{"^%a+://w*%.?":""}]}]
## empty for no replace
filename_replace=

## 此项与autoload.lua脚本功能重复
## filetypes to search from directory
#loadfiles_filetypes=["mkv","avi","mp4","ogv","webm","rmvb","flv","wmv","mpeg","mpg","m4v","3gp"]

## 此项与autoload.lua脚本功能重复
## loadfiles at startup if there is 0 or 1 items in playlist, if 0 uses worḱing dir for files
## requires --idle=yes or --idle=once if 0 files in playlist
loadfiles_on_start=no

## sort playlist on mpv start
sortplaylist_on_start=no

## sort playlist when any files are added to playlist after initial load
sortplaylist_on_file_add=no

## yes: use alphanumerical sort comparison(nonpadded numbers in order), no: use normal lua string comparison
alphanumsort=yes

## linux | windows | auto
system=windows

## Use ~ for home directory. Leave as empty to use mpv/playlists
playlist_savepath=

#save playlist automatically after current file was unloaded
save_playlist_on_file_end=no

## 2 shows playlist, 1 shows current file(filename strip applied), 0 shows nothing
show_playlist_on_fileload=0

## sync cursor when file is loaded from outside reasons(file-ending, playlist-next shortcut etc.)
sync_cursor_on_load=yes

## playlist open key will toggle visibility instead of refresh
open_toggles=yes

##是否光标移动到末尾自动切换到首位条目
loop_cursor=no

#### ------- VISUAL ------- ####

## prefer to display titles for following files: "all", "url", "none". Sorting still uses filename
prefer_titles=url

## call youtube-dl to resolve the titles of urls in the playlist
resolve_titles=no

##播放列表短暂停留的时间 with high value on this open_toggles is good to be yes
playlist_display_timeout=60

##截断后显示的列表条目数
showamount=24

##是否随窗口缩放
scale_playlist_by_window=yes

##播放列表的字体样式
## example {\fnUbuntu\fs10\b0\bord1} equals: font=Ubuntu, size=10, bold=no, border=1
## read http://docs.aegisub.org/3.2/ASS_Tags/ for reference of tags
## no values defaults to OSD settings in mpv.conf
style_ass_tags={\fnSans\fs10\b0\bord1}

##左上方的边距
text_padding_x=10
text_padding_y=10

##是否修改MPV的窗口标题
set_title_stripped=no
title_prefix=
title_suffix=

##是否切断长文件名，最大显示字符数
slice_longfilenames=yes
slice_longfilenames_amount=120

##播放列表标题 One newline will be added after the string.
## %mediatitle or %filename = title or name of playing file
## %pos = position of playing file
## %cursor = position of navigation
## %plen = playlist lenght
## %N = newline
playlist_header=播放列表 [%cursor/%plen]

##播放列表模板
## %pos = position of file with leading zeros
## %name = title or name of file
## %N = newline
## you can also use the ass tags mentioned above. For example:
## selected_file={\c&HFF00FF&}➔ %name   | to add a color for selected file. However, if you
## use ass tags you need to reset them for every line (see https://github.com/jonniek/mpv-playlistmanager/issues/20)
normal_file={\c&HFFFFFF&}□ %name
hovered_file={\c&H33FFFF&}■ %name
selected_file={\c&C1C1FF&}☑ %name
playing_file={\c&H00FF00&}▷ %name
playing_hovered_file={\c&H00FF00&}▶ %name
playing_selected_file={\c&C1C1FF&}☑ %name

##播放列表被截断时的显示
playlist_sliced_prefix=▲
playlist_sliced_suffix=▼
